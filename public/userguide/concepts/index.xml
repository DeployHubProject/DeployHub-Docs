<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DeployHub User Guide and API Reference â€“ Key Concepts</title>
    <link>/userguide/concepts/</link>
    <description>Recent content in Key Concepts on DeployHub User Guide and API Reference</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	  <atom:link href="/userguide/concepts/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Userguide: DeployHub 101</title>
      <link>/userguide/concepts/1-deployhub-basic-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/userguide/concepts/1-deployhub-basic-concepts/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;DeployHub&amp;rsquo;s core Objects are &lt;em&gt;Domains&lt;/em&gt;, &lt;em&gt;Applications&lt;/em&gt;, &lt;em&gt;Components&lt;/em&gt;, &lt;em&gt;Environments&lt;/em&gt; and &lt;em&gt;Endpoints&lt;/em&gt;. These Objects catalog, track, and version independently deployable objects, maps their relationships, and releases them to clusters, cloud, or physical data centers.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Domains&lt;/em&gt; are core to DeployHub&amp;rsquo;s management of microservices.  &lt;em&gt;Domains&lt;/em&gt; are hierarchical and pass inheritance from parent to siblings. For this reason, &lt;em&gt;Components&lt;/em&gt; can be shared across the &lt;em&gt;Subdomains&lt;/em&gt;. The hierarchical structure of &lt;em&gt;Domains&lt;/em&gt; provides a high-level of control and management over how microservices are shared and reused.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/userguide/images/OnlineStore-Domains.jpg&#34; alt=&#34;Example of Domains, Applications, Components and Environments&#34;&gt;&lt;/p&gt;
&lt;p&gt;Other &lt;em&gt;Objects&lt;/em&gt; include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Change Request&lt;/li&gt;
&lt;li&gt;Credentials&lt;/li&gt;
&lt;li&gt;Data Sources&lt;/li&gt;
&lt;li&gt;Date&lt;/li&gt;
&lt;li&gt;DropZone&lt;/li&gt;
&lt;li&gt;DropZone File&lt;/li&gt;
&lt;li&gt;Notifiers&lt;/li&gt;
&lt;li&gt;User&lt;/li&gt;
&lt;li&gt;UserGroup (DeployHub Pro Object)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These Objects can be referenced using DeployHub APIs or custom DMSCripts.&lt;/p&gt;
&lt;p&gt;Following is a description of each Object and their attributes.&lt;/p&gt;
&lt;h2 id=&#34;_application_-object&#34;&gt;&lt;em&gt;Application&lt;/em&gt; Object&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/userguide/packaging-applications/&#34;&gt;&lt;em&gt;Applications&lt;/em&gt;&lt;/a&gt; are a collection of &lt;em&gt;Components&lt;/em&gt; that can be deployed as a single software solution. You define an &lt;em&gt;Application&lt;/em&gt; by associating the &lt;em&gt;Components&lt;/em&gt; it will consume. The first version is the &lt;em&gt;Application Base Version.&lt;/em&gt; When you change this &lt;em&gt;Application Base Version&lt;/em&gt;, you create a new &lt;em&gt;Application Version&lt;/em&gt;. &lt;em&gt;Applications&lt;/em&gt; are assigned and deployed to &lt;em&gt;Environments&lt;/em&gt;. &lt;em&gt;Applications&lt;/em&gt; are associated to a &lt;em&gt;Domain&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Application Base Version&lt;/em&gt;&lt;/strong&gt; : Defines the software product in terms of &lt;em&gt;Components&lt;/em&gt;, &lt;em&gt;Attributes,&lt;/em&gt; and assigned &lt;em&gt;Environments&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Application Version&lt;/em&gt;&lt;/strong&gt; : This represents any changes made in to the &lt;em&gt;Base Versions&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An &lt;em&gt;Application&lt;/em&gt; has the following properties:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Property&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;A unique identifier for the &lt;em&gt;Application&lt;/em&gt;  in the database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Application&lt;/em&gt; name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fqdomain&lt;/td&gt;
&lt;td&gt;Fully qualified &lt;em&gt;Domain&lt;/em&gt; name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;summary&lt;/td&gt;
&lt;td&gt;Summary of the &lt;em&gt;Domain&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;owner&lt;/td&gt;
&lt;td&gt;&lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; that owns it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parent&lt;/td&gt;
&lt;td&gt;The Base &lt;em&gt;Application&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;predecessor&lt;/td&gt;
&lt;td&gt;Predecessor &lt;em&gt;Application Version&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Release&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Defines the &lt;em&gt;Application&lt;/em&gt; Object with more than one &lt;em&gt;Application&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Applications&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Multiple &lt;em&gt;Applications&lt;/em&gt; used to create a &lt;em&gt;Release&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Components&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;The objects that the &lt;em&gt;Application&lt;/em&gt; consumes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;approvals&lt;/td&gt;
&lt;td&gt;Allows a control point for progressing a change within the pipeline process.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;requests&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Change Request&lt;/em&gt; objects associated with this &lt;em&gt;Application&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;creator&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; who created it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;modifier&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; who last modified it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctime&lt;/td&gt;
&lt;td&gt;The date/time it was created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mtime&lt;/td&gt;
&lt;td&gt;The date/time it was last modified.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;KV Configurations&lt;/td&gt;
&lt;td&gt;Key Value Pairs for managing associative arrays.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;_release_-object&#34;&gt;&lt;em&gt;Release&lt;/em&gt; Object&lt;/h3&gt;
&lt;p&gt;A &lt;a href=&#34;/userguide/profeatures/5-application-releases/&#34;&gt;&lt;em&gt;Release&lt;/em&gt;&lt;/a&gt; is only available in &lt;strong&gt;DeployHub Pro&lt;/strong&gt;. A &lt;em&gt;Release&lt;/em&gt; is a collection of &lt;em&gt;Applications&lt;/em&gt; that must be deployed together, sometimes referred to as a &amp;lsquo;Release Train.&amp;rsquo;&lt;/p&gt;
&lt;h2 id=&#34;_change-request_-object&#34;&gt;&lt;em&gt;Change Request&lt;/em&gt; Object&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;/userguide/profeatures/5-change-requests/&#34;&gt;&lt;em&gt;Change Request&lt;/em&gt;&lt;/a&gt; Object represents a change request record associated with either a &lt;em&gt;Component&lt;/em&gt; or an &lt;em&gt;Application&lt;/em&gt;. A &lt;em&gt;Change Request&lt;/em&gt; is a DeployHub Pro feature.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Change Request&lt;/em&gt; object has the following properties:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Change Request&lt;/em&gt; id.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Change Request&lt;/em&gt; description.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;status&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Change Request&lt;/em&gt; status.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;api_url&lt;/td&gt;
&lt;td&gt;A URL which, if passed to restful_get, will return an array containing the full details of the &lt;em&gt;Change Request&lt;/em&gt; from the external change tracking system. Useful for getting more information than the id / description / status combination which is stored in DeployHub.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;html_url&lt;/td&gt;
&lt;td&gt;A URL which will direct a browser to the page describing the change request in the external change tracking system.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;_component_-object&#34;&gt;&lt;em&gt;Component&lt;/em&gt; Object&lt;/h2&gt;
&lt;p&gt;DeployHub manages microservices and other reusable objects as &lt;a href=&#34;/userguide/publishing-components/&#34;&gt;&lt;em&gt;Components&lt;/em&gt;&lt;/a&gt;. These are assigned to an &lt;em&gt;Application&lt;/em&gt; even though they are managed independently. By assigning &lt;em&gt;Components&lt;/em&gt; to &lt;em&gt;Applications&lt;/em&gt; you track a &amp;rsquo;logical&amp;rsquo; view of your software solution. In a monolithic approach, this happened at the software compile and link step. In microservices though, they are loosely coupled and linked at run-time. Defining &lt;em&gt;Components&lt;/em&gt; to &lt;em&gt;Applications&lt;/em&gt; puts the &lt;em&gt;Application&lt;/em&gt; back in the picture, even if it is only a &amp;rsquo;logical&amp;rsquo; view.&lt;/p&gt;
&lt;p&gt;If you are an API or microservice developer, this will be where you do most of your work. However, application developers may also define &lt;em&gt;Components&lt;/em&gt; for a specific &lt;em&gt;Application&lt;/em&gt;. &lt;em&gt;Components&lt;/em&gt; are microservices (containers), Database updates, or other deployable objects. By tracking the low level deployment metadata for a &lt;em&gt;Component&lt;/em&gt;, it can be easily shared and released in a consistent way across team.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Components&lt;/em&gt; change over time, and so DeployHub contains &lt;em&gt;Component Base Versions&lt;/em&gt; and &lt;em&gt;Component Versions&lt;/em&gt; like those of &lt;em&gt;Application Base Versions&lt;/em&gt; and &lt;em&gt;Application Versions.&lt;/em&gt; And like &lt;em&gt;Applications&lt;/em&gt;, &lt;em&gt;Components&lt;/em&gt; are associated to a Domain.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Component Base Version&lt;/em&gt;&lt;/strong&gt; : Objects within DeployHub that contain the files and procedures deployed to &lt;em&gt;Endpoints&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Component Version&lt;/em&gt;&lt;/strong&gt; : A child of the &lt;em&gt;Component Base Version&lt;/em&gt; that represents changes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A &lt;em&gt;Component&lt;/em&gt; Object has the following properties:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Property&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;A unique identifier for the &lt;em&gt;Component&lt;/em&gt; as used in the database.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;The name of the &lt;em&gt;Component&lt;/em&gt;.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fqdomain&lt;/td&gt;
&lt;td&gt;Fully qualified &lt;em&gt;Domain&lt;/em&gt; name.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;summary&lt;/td&gt;
&lt;td&gt;Description of the &lt;em&gt;Component&lt;/em&gt;.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;domain&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Domain&lt;/em&gt; in which the &lt;em&gt;Component&lt;/em&gt; is contained.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;owner&lt;/td&gt;
&lt;td&gt;User or UserGroup that owns the &lt;em&gt;Component&lt;/em&gt;.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parent&lt;/td&gt;
&lt;td&gt;The Base &lt;em&gt;Component&lt;/em&gt;.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;predecessor&lt;/td&gt;
&lt;td&gt;The version on which this is based.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;items&lt;/td&gt;
&lt;td&gt;The items that make up this &lt;em&gt;Component&lt;/em&gt;.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Endpoints&lt;/em&gt; to which this &lt;em&gt;Component&lt;/em&gt; has been deployed.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;requests&lt;/td&gt;
&lt;td&gt;The change requests associated with this &lt;em&gt;Component&lt;/em&gt; .&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lastbuild&lt;/td&gt;
&lt;td&gt;The last build number for this &lt;em&gt;Component&lt;/em&gt;, 0 if never built.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;creator&lt;/td&gt;
&lt;td&gt;The User who created this &lt;em&gt;Component&lt;/em&gt;.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;modifier&lt;/td&gt;
&lt;td&gt;The User who last modified this &lt;em&gt;Component&lt;/em&gt;.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctime&lt;/td&gt;
&lt;td&gt;The date/time the &lt;em&gt;Component&lt;/em&gt; was created.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mtime&lt;/td&gt;
&lt;td&gt;The date/time the &lt;em&gt;Component&lt;/em&gt; was last modified.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Key Value Configurations&lt;/td&gt;
&lt;td&gt;Key Value Pairs for managing associative arrays.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;_component_-and-_application_-relationships&#34;&gt;&lt;em&gt;Component&lt;/em&gt; and &lt;em&gt;Application&lt;/em&gt; Relationships&lt;/h3&gt;
&lt;p&gt;There is a many-to-many relationship between &lt;em&gt;Applications&lt;/em&gt; and &lt;em&gt;Components.&lt;/em&gt; An &lt;em&gt;Application&lt;/em&gt; can contain many different &lt;em&gt;Components&lt;/em&gt;, and a &lt;em&gt;Component&lt;/em&gt; can be used across many different &lt;em&gt;Applications&lt;/em&gt;.  &lt;em&gt;Components&lt;/em&gt; can be easily shared between &lt;em&gt;Applications&lt;/em&gt;. DeployHub tracks and versions the &lt;em&gt;Component&lt;/em&gt; relationships including to which &lt;em&gt;Applications&lt;/em&gt; they have been assigned.&lt;/p&gt;
&lt;h3 id=&#34;_component_-and-_application_-versioning&#34;&gt;&lt;em&gt;Component&lt;/em&gt; and &lt;em&gt;Application&lt;/em&gt; Versioning&lt;/h3&gt;
&lt;p&gt;A backend versioning engine tracks all software deployment configurations. This is done within an &lt;em&gt;Application&lt;/em&gt;. An &lt;em&gt;Application&lt;/em&gt; consists of one or more &lt;em&gt;Components&lt;/em&gt;. Versioning tracks all changes in both your &lt;em&gt;Application&lt;/em&gt; and &lt;em&gt;Component&lt;/em&gt; attributes. This includes all low level information such as the &lt;em&gt;Action&lt;/em&gt; used to perform the installation, environment variables, and database schemas.&lt;/p&gt;
&lt;p&gt;When you first define your &lt;em&gt;Application&lt;/em&gt;, you create an &lt;em&gt;Application Base Version&lt;/em&gt;. Over time, as you update your code and deliver new features, each change to the &lt;em&gt;Application&lt;/em&gt; creates a new &lt;em&gt;Application Version&lt;/em&gt;.  &lt;em&gt;Application Versions&lt;/em&gt; package all your &lt;em&gt;Components&lt;/em&gt; in your entire software product. Like &lt;em&gt;Application Versions&lt;/em&gt;, there is an initial &lt;em&gt;Component Base Version&lt;/em&gt; and subsequent &lt;em&gt;Component Versions,&lt;/em&gt; which represent any updates . An &lt;em&gt;Application Base Version&lt;/em&gt; or &lt;em&gt;Component Base Version&lt;/em&gt; is always the first one created, and it acts as a model for subsequent &lt;em&gt;Application&lt;/em&gt; or &lt;em&gt;Component Versions&lt;/em&gt;. Otherwise they are identical types of objects.&lt;/p&gt;
&lt;p&gt;When a new &lt;em&gt;Application Version&lt;/em&gt; is created from either an &lt;em&gt;Application Base Version&lt;/em&gt; or another &lt;em&gt;Application Version&lt;/em&gt;, it inherits all previous &lt;em&gt;Components&lt;/em&gt; from its predecessor. That predecessor is determined when running a &lt;em&gt;Create Version Task&lt;/em&gt; for an &lt;em&gt;Application Version&lt;/em&gt;. You can specify whether the new &lt;em&gt;Application Version&lt;/em&gt; inherits its &lt;em&gt;Components&lt;/em&gt; from the original &lt;em&gt;Application Base Version&lt;/em&gt;, the latest &lt;em&gt;Application Version&lt;/em&gt;, or a specific &lt;em&gt;Application Version&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;DeployHub uses a simple versioning number schema starting at 1 and incrementing over time, for example Myapp;1, Myapp;2.&lt;/p&gt;
&lt;p&gt;You can use your CI/CD process to include variance in your versioning number (base name, variant, version).  See &lt;a href=&#34;/userguide/integrations/ci-cd_integrations/#_component_-versioning-schema&#34;&gt;Component Versioning Schema&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;_credential_-object&#34;&gt;&lt;em&gt;Credential&lt;/em&gt; Object&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;/userguide/first-steps/2-define-your-credentials/&#34;&gt;&lt;em&gt;Credential&lt;/em&gt; Object&lt;/a&gt; contains the logon and password needed to access &lt;em&gt;EndPoints&lt;/em&gt; and external repositories like Git or Quay.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Credential&lt;/em&gt; Object has the following properties:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;A unique identifier for the &lt;em&gt;Credential&lt;/em&gt; as used in the database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;The name of the  &lt;em&gt;Credential&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;summary&lt;/td&gt;
&lt;td&gt;Description.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fqdomain&lt;/td&gt;
&lt;td&gt;Fully qualified &lt;em&gt;Domain&lt;/em&gt; name that the &lt;em&gt;Credential&lt;/em&gt; is associated with.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;domain&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Domain&lt;/em&gt; in which the &lt;em&gt;Credential&lt;/em&gt; is associated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;owner&lt;/td&gt;
&lt;td&gt;&lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; that owns the &lt;em&gt;Credential&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;username&lt;/td&gt;
&lt;td&gt;Decrypted username.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;password&lt;/td&gt;
&lt;td&gt;Decrypted password.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b64auth&lt;/td&gt;
&lt;td&gt;A string representing the decrypted username and password together, with a : separator and then base64 encoded. Used for Basic Authorization for web-based APIs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;creator&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; who created this &lt;em&gt;Credential&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;modifier&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; who last modified this &lt;em&gt;Credential&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctime&lt;/td&gt;
&lt;td&gt;The date/time the &lt;em&gt;Credential&lt;/em&gt; was created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mtime&lt;/td&gt;
&lt;td&gt;The date/time the &lt;em&gt;Credential&lt;/em&gt; was last modified.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Type&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Credential&lt;/em&gt; use.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;_data-source_-objects&#34;&gt;&lt;em&gt;Data Source&lt;/em&gt; Objects&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;/userguide/customizations/2-data-sources/&#34;&gt;&lt;em&gt;Data Source&lt;/em&gt;&lt;/a&gt; object  communicates with various sources of information such as databases, HTTP servers, FTP servers, etc., and can be used to connect to other DevOps tools as needed.&lt;/p&gt;
&lt;h2 id=&#34;_date_-object&#34;&gt;&lt;em&gt;Date&lt;/em&gt; Object&lt;/h2&gt;
&lt;p&gt;Dates track the date/time of the creation, deletion, or update of an Object.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Date&lt;/em&gt; has the following properties:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;to_int(secs)&lt;/td&gt;
&lt;td&gt;Returns an integer representing the date as the number of seconds since midnight on January 1st 1970 (epoch). The secs parameter is optional. If needed, the specified number of seconds is added to the date/time before the new value is returned.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;to_char(fmt)&lt;/td&gt;
&lt;td&gt;Formats the date into a string given by the passed fmt string. The fmt string should contain characters as specified below.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;_domain_-object&#34;&gt;&lt;em&gt;Domain&lt;/em&gt; Object&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;/userguide/customizations/2-define-your-functions-and-procedures/&#34;&gt;&lt;em&gt;Domain&lt;/em&gt; Object&lt;/a&gt; represents the highest order of organization for managing &lt;em&gt;Applications&lt;/em&gt;, &lt;em&gt;Components&lt;/em&gt; and &lt;em&gt;Environments&lt;/em&gt;. &lt;em&gt;Domains&lt;/em&gt; are hierarchical and can have &lt;em&gt;Subdomains&lt;/em&gt;. &lt;em&gt;Subdomains&lt;/em&gt; inherit the parents properties, &lt;em&gt;Tasks&lt;/em&gt; and access.&lt;/p&gt;
&lt;p&gt;Your microservices, a type of &lt;em&gt;Component&lt;/em&gt;, are cataloged based on &lt;em&gt;Domains&lt;/em&gt; and &lt;em&gt;Subdomains&lt;/em&gt; which you define. &lt;em&gt;Domains&lt;/em&gt; catalog microservices that solve the same &amp;lsquo;problem sets.&amp;rsquo; In a similar way, &lt;em&gt;Applications&lt;/em&gt; are assigned to their own &lt;em&gt;Domain&lt;/em&gt;. &lt;em&gt;Environments&lt;/em&gt; and &lt;em&gt;Endpoints&lt;/em&gt; are associated to &lt;em&gt;Domains&lt;/em&gt; that are managing &lt;em&gt;Applications&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The highest level &lt;em&gt;Domain&lt;/em&gt; is your &lt;em&gt;Global Domain&lt;/em&gt;. With the SaaS version, your &lt;em&gt;Global Domain&lt;/em&gt; name is defined based on your Company. With the on-premise installation, you will see a &lt;em&gt;Domain&lt;/em&gt; called &lt;em&gt;Global&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Domains&lt;/em&gt; also include &lt;em&gt;Tasks&lt;/em&gt;. &lt;em&gt;Tasks&lt;/em&gt; include Move, Approve, Version and Deploy. &lt;em&gt;Tasks&lt;/em&gt; can be called by external solutions via APIs for integration into your Continuous Delivery Pipeline. &lt;em&gt;Tasks&lt;/em&gt; are associated to any &lt;em&gt;Domain&lt;/em&gt; and can be defined as &lt;em&gt;Pre&lt;/em&gt; or &lt;em&gt;Post&lt;/em&gt;.  &lt;em&gt;Tasks&lt;/em&gt; are normally defined to &lt;em&gt;Life Cycle Subdomains&lt;/em&gt; and support continuous configuration management in your continuous delivery process.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Life Cycle Subdomains&lt;/em&gt; allow you to automate the push of your continuous deployments from development through production. DeployHub can be called by your Continuous Delivery engine (Jenkins, Bamboo, GitLab, CircleCI, Puppet Relay, Google CloudBuild or GitHub Actions) to perform the continuous deployment task across all states of your pipeline. If you are not using a Continuous Delivery orchestration engine, you can assign &lt;em&gt;Tasks&lt;/em&gt; to your &lt;em&gt;Life Cycle Subdomain&lt;/em&gt; to define a continuous deployment &amp;lsquo;promotion&amp;rsquo; process within DeployHub.&lt;/p&gt;
&lt;p&gt;The following properties can be accessed on the &lt;em&gt;Domain&lt;/em&gt; object:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Property&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Domain&lt;/em&gt; id, as used in the database.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Domain&lt;/em&gt; name.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fqdomain&lt;/td&gt;
&lt;td&gt;Fully qualified &lt;em&gt;Domain&lt;/em&gt; name.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;summary&lt;/td&gt;
&lt;td&gt;Summary text.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;domain&lt;/td&gt;
&lt;td&gt;Higher level &lt;em&gt;Domain&lt;/em&gt; to which it belongs.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;subdomains&lt;/td&gt;
&lt;td&gt;List of &lt;em&gt;Domain&lt;/em&gt; objects which are contained within it.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Life Cycle&lt;/td&gt;
&lt;td&gt;A &lt;em&gt;Domain&lt;/em&gt; that includes a pipeline and the lowest level &lt;em&gt;Subdomains&lt;/em&gt;. &lt;em&gt;Life Cycle-domains&lt;/em&gt; cannot have &lt;em&gt;Subdomains&lt;/em&gt;.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Applications&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Application&lt;/em&gt; objects which are contained within it.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Environments&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Environment&lt;/em&gt; objects which are contained within it.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;creator&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; Object representing the user who created it.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;modifier&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt;  Object representing the user who last modified it.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctime&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Date&lt;/em&gt; Object representing the date/time it was created.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mtime&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Date&lt;/em&gt; Object representing the date/time it was last modified.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;owner&lt;/td&gt;
&lt;td&gt;&lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; Objects that owns it.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;_dropzone_-object&#34;&gt;&lt;em&gt;Dropzone&lt;/em&gt; Object&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;DropZone&lt;/em&gt; Object represents a local area where deployment artifacts are  manipulated before sent to the target &lt;em&gt;Endpoints&lt;/em&gt;. A &lt;em&gt;DropZone&lt;/em&gt; Object is also present on the stack during Pre and Post &lt;em&gt;Action&lt;/em&gt; processing for a &lt;em&gt;Component&lt;/em&gt;. For example, the content of the &lt;em&gt;DropZone&lt;/em&gt; are the files checked out from the repository for the associated &lt;em&gt;Component&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;em&gt;DropZone&lt;/em&gt; Object has the following properties:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;&lt;em&gt;DropZone&lt;/em&gt; name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;The full path of where the &lt;em&gt;DropZone&lt;/em&gt; is located. Useful for passing to external scripts that may need to manipulate files in the &lt;em&gt;DropZone&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;files&lt;/td&gt;
&lt;td&gt;An Array of &lt;em&gt;DropZone Objects&lt;/em&gt;, each one of which represents a file in the &lt;em&gt;DropZone&lt;/em&gt;. The array is keyed by the full path name of the file.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;_dropzone_-file-object&#34;&gt;&lt;em&gt;DropZone&lt;/em&gt; File Object&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;DropZone File&lt;/em&gt; Object represents a file in the &lt;em&gt;DropZone&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;DropZone File&lt;/em&gt; Object has the following properties:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;dzpath&lt;/td&gt;
&lt;td&gt;The relative path of the file in the &lt;em&gt;DropZone&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;repopath&lt;/td&gt;
&lt;td&gt;The relative path of the file as located in the repository (this path is relative to the base directory of the repository).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;size&lt;/td&gt;
&lt;td&gt;The size of the file in bytes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctime&lt;/td&gt;
&lt;td&gt;The creation time of the file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mtime&lt;/td&gt;
&lt;td&gt;The modified time of the file.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;_environment_-object&#34;&gt;&lt;em&gt;Environment&lt;/em&gt; Object&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;/userguide/first-steps/2-define-environments/&#34;&gt;&lt;em&gt;Environment&lt;/em&gt; Object&lt;/a&gt; represents a collection of &lt;em&gt;Endpoints&lt;/em&gt; where an &lt;em&gt;Application&lt;/em&gt; is deployed. Multiple &lt;em&gt;Environments&lt;/em&gt; can represent your pipeline stages such as Development, Testing, and Production for a single &lt;em&gt;Application&lt;/em&gt;.  Your &lt;em&gt;Application&lt;/em&gt; can have as many &lt;em&gt;Environments&lt;/em&gt; as needed.&lt;/p&gt;
&lt;p&gt;The following properties can be accessed for an &lt;em&gt;Environment&lt;/em&gt; object:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Property&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;Unique identifier as used in the database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Environment&lt;/em&gt; name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fqdomain&lt;/td&gt;
&lt;td&gt;Fully qualified &lt;em&gt;Domain&lt;/em&gt; name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;summary&lt;/td&gt;
&lt;td&gt;Description of the &lt;em&gt;Environment&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;domain&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Domain&lt;/em&gt; in which it is contained.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;owner&lt;/td&gt;
&lt;td&gt;&lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; Objects that owns it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;basedir&lt;/td&gt;
&lt;td&gt;Base directory for deployments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Endpoints&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Endpoints&lt;/em&gt; assigned to it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Applications&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Applications&lt;/em&gt; associated to it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;creator&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; who created it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;modifier&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; who last modified it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctime&lt;/td&gt;
&lt;td&gt;The date/time it was created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mtime&lt;/td&gt;
&lt;td&gt;The date/time it was last modified.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parent&lt;/td&gt;
&lt;td&gt;Parent &lt;em&gt;Domain&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;_endpoint_-object&#34;&gt;&lt;em&gt;Endpoint&lt;/em&gt; Object&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;/userguide/first-steps/2-define-endpoints/&#34;&gt;&lt;em&gt;Endpoint&lt;/em&gt; Object&lt;/a&gt; (Local Helm Host, container, VM/Cloud Image) represents where a deployment will be sent. &lt;em&gt;Endpoints&lt;/em&gt; are assigned to an &lt;em&gt;Environment&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;_endpoint_-mapping&#34;&gt;&lt;em&gt;Endpoint&lt;/em&gt; Mapping&lt;/h3&gt;
&lt;p&gt;Each &lt;em&gt;Component&lt;/em&gt; is assigned a Type attribute. You can specify which kind of &lt;em&gt;Endpoint&lt;/em&gt; is needed. For example, a Database &lt;em&gt;Component&lt;/em&gt; is installed onto an &lt;em&gt;Endpoint&lt;/em&gt; with a corresponding Database &lt;em&gt;Type&lt;/em&gt; definition. A &lt;em&gt;Component&lt;/em&gt; is assigned a single Type, while an &lt;em&gt;Endpoint&lt;/em&gt; can be assigned multiple Types. For example, if your single &lt;em&gt;Endpoint&lt;/em&gt; needed to have both a database and your application binaries installed, it would be assigned both a &amp;lsquo;Database&amp;rsquo; and a &amp;lsquo;Binary&amp;rsquo; &lt;em&gt;Type&lt;/em&gt; attribute.&lt;/p&gt;
&lt;p&gt;To map a &lt;em&gt;Component&lt;/em&gt; to &lt;em&gt;Endpoints&lt;/em&gt;, assign one or more &lt;em&gt;Component&lt;/em&gt; Types to each &lt;em&gt;Endpoint&lt;/em&gt;. Then assign a single Type attribute to that &lt;em&gt;Component&lt;/em&gt;. When an &lt;em&gt;Application&lt;/em&gt; is deployed, each &lt;em&gt;Component&lt;/em&gt; within the &lt;em&gt;Application&lt;/em&gt; will be deployed to each &lt;em&gt;Endpoint&lt;/em&gt; if the &lt;em&gt;Component&amp;rsquo;s Type&lt;/em&gt; attribute matches one of the &lt;em&gt;Endpoint&amp;rsquo;s&lt;/em&gt; Type attributes. DeployHub ships with standard &lt;em&gt;Component&lt;/em&gt; and &lt;em&gt;Endpoint&lt;/em&gt; Types and allows you to define custom Type attributes.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Endpoint&lt;/em&gt; object has the following properties:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Property&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;A unique identifier as used in the database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Endpoint&lt;/em&gt; name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fqdomain&lt;/td&gt;
&lt;td&gt;Fully qualified &lt;em&gt;Domain&lt;/em&gt; name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;summary&lt;/td&gt;
&lt;td&gt;Description of the &lt;em&gt;Endpoint&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;domain&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Domain&lt;/em&gt; in which it is contained.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;owner&lt;/td&gt;
&lt;td&gt;&lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; that owns it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hostname&lt;/td&gt;
&lt;td&gt;Hostname (if set) or name otherwise.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;basedir&lt;/td&gt;
&lt;td&gt;Base Directory for Deployments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Endpoint&lt;/em&gt; Type, ie: cluster, windows, cloud, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;credential&lt;/td&gt;
&lt;td&gt;The logon and password used to access this &lt;em&gt;Endpoint&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Components&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Components&lt;/em&gt; currently installed on it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;creator&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; who created it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;modifier&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; who last modified it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctime&lt;/td&gt;
&lt;td&gt;The date/time it was created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mtime&lt;/td&gt;
&lt;td&gt;The date/time it was last modified.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Key Value Configurations&lt;/td&gt;
&lt;td&gt;Key Value Pairs for managing associative arrays.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;_notifier_-objects&#34;&gt;&lt;em&gt;Notifier&lt;/em&gt; Objects&lt;/h2&gt;
&lt;p&gt;A &lt;a href=&#34;/userguide/customizations/2-define-notifiers/&#34;&gt;&lt;em&gt;Notifier&lt;/em&gt;&lt;/a&gt; is sent after a successful or failed deployment attempt. If these features are activated, they are also sent when deployed files have been changed, a Request Task has been used, or when an &lt;em&gt;Endpoint&lt;/em&gt; is down,  DeployHub can use SMTP (Simple Mail Transfer Protocol), Slack and HipChat for this purpose.&lt;/p&gt;
&lt;h2 id=&#34;_user_-object&#34;&gt;&lt;em&gt;User&lt;/em&gt; Object&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;User&lt;/em&gt; Object represents a User in DeployHub. It has the following properties:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Property&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Return Type&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;User id, as used in the database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;User Name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kind&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;Returns &amp;ldquo;user&amp;rdquo;. Used to differentiate between users and groups when retrieving an owner object.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fqdomain&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;Fully qualified &lt;em&gt;Domain&lt;/em&gt; name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;realname&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&amp;rsquo;s&lt;/em&gt; full name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;email&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&amp;rsquo;s&lt;/em&gt; email address.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;phone&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;User&amp;rsquo;s&lt;/em&gt; telephone number.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;groups&lt;/td&gt;
&lt;td&gt;Array&lt;/td&gt;
&lt;td&gt;Array of &lt;em&gt;Group&lt;/em&gt; Objects to which this User belongs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lastlogin&lt;/td&gt;
&lt;td&gt;Date&lt;/td&gt;
&lt;td&gt;The date/time last logged into DeployHub.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;creator&lt;/td&gt;
&lt;td&gt;User&lt;/td&gt;
&lt;td&gt;&lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; Object representing who created this &lt;em&gt;User&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;modifier&lt;/td&gt;
&lt;td&gt;User&lt;/td&gt;
&lt;td&gt;&lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; Object representing who last modified this &lt;em&gt;User&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctime&lt;/td&gt;
&lt;td&gt;Date&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Date&lt;/em&gt; Object representing the date/time the User was created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mtime&lt;/td&gt;
&lt;td&gt;Date&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Date&lt;/em&gt; Object representing the date/time the User was last modified.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;owner&lt;/td&gt;
&lt;td&gt;Object&lt;/td&gt;
&lt;td&gt;&lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; that owns the &lt;em&gt;User&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;_group_-object&#34;&gt;&lt;em&gt;Group&lt;/em&gt; Object&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;Group&lt;/em&gt; Object represents a collection of &lt;em&gt;Users&lt;/em&gt; with the same &lt;em&gt;Domain&lt;/em&gt; and security access. (This is a DeployHub Pro Feature.)&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Group&lt;/em&gt; Object has the following properties:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;A unique identifier as used in the database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Group&lt;/em&gt; Name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kind&lt;/td&gt;
&lt;td&gt;Identifies whether this is a &lt;em&gt;User&lt;/em&gt; or a &lt;em&gt;Group&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fqdomain&lt;/td&gt;
&lt;td&gt;Fully qualified &lt;em&gt;Domain&lt;/em&gt; name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;email&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Group&amp;rsquo;s&lt;/em&gt; email address.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;creator&lt;/td&gt;
&lt;td&gt;&lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; Object representing who created this Group.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;modifier&lt;/td&gt;
&lt;td&gt;&lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; Object representing who last modified this &lt;em&gt;Group&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctime&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Date&lt;/em&gt; Object representing the date/time it was created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mtime&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Date&lt;/em&gt; Object representing the date/time it was last modified.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;owner&lt;/td&gt;
&lt;td&gt;&lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; that owns the object.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Userguide: Architecture</title>
      <link>/userguide/concepts/1-deployhub-processing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/userguide/concepts/1-deployhub-processing/</guid>
      <description>
        
        
        &lt;h2 id=&#34;architecture&#34;&gt;Architecture&lt;/h2&gt;
&lt;p&gt;DeployHub includes a central engine that can be installed locally or from the SaaS offering via a reverse proxy. The central engine connects to external repositories, Continuous Delivery (CD) engines, DevOps tools, data sources, transfer protocols and notification tools. With our open architecture, you plug-in the tool-set you use to define your release configurations.&lt;/p&gt;
&lt;p&gt;For releasing &lt;em&gt;Components&lt;/em&gt;, an agentless architecture supports both a modern architecture of containers as well as legacy systems. If you use solutions like Helm or Ansible to update your cluster, great, we can call those external solutions to perform the updates and provide all the microservice configuration mapping and version information. DeployHub also has plug-ins to continuous delivery pipelines that supports continuous configuration management as part of your release process.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/userguide/images/Architecture.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;reverse-proxy-and-saas&#34;&gt;Reverse Proxy and SaaS&lt;/h2&gt;
&lt;p&gt;As a SaaS customer, a &amp;lsquo;one-way&amp;rsquo; reverse proxy is used on your side of the firewall. The proxy send requests for deployments every 60 seconds.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/userguide/images/ReverseProxy.png&#34; alt=&#34;SaaS Architecture&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;deployments-with-custom-actions-for-cloud-native-releases&#34;&gt;Deployments with Custom Actions for Cloud Native Releases&lt;/h2&gt;
&lt;p&gt;DeployHub integrates with external deployment solutions such as Helm to perform the actual movement of containers to a cluster. When a &lt;em&gt;Custom Action&lt;/em&gt; is used, the internal deployment engine is bypassed. This is the easiest way to perform an update to your cluster.&lt;/p&gt;
&lt;h2 id=&#34;the-deployhub-engine-for-monolithic-releases-and-database-updates&#34;&gt;The DeployHub Engine for Monolithic Releases and Database Updates&lt;/h2&gt;
&lt;p&gt;Our deployment engine manages monolithic deployments and database updates. It moves files and scripts from source &lt;em&gt;Repositories&lt;/em&gt; to a target &lt;em&gt;Environment&lt;/em&gt; which contains one or more &lt;em&gt;Endpoints&lt;/em&gt;. This is performed via &lt;em&gt;Releases&lt;/em&gt; or &lt;em&gt;Applications&lt;/em&gt;, which contain &lt;em&gt;Components&lt;/em&gt;. &lt;em&gt;Components&lt;/em&gt; reference a &lt;em&gt;Repository&lt;/em&gt;, whose files and scripts are placed into the &lt;em&gt;Dropzone&lt;/em&gt;. Customized &lt;em&gt;Actions&lt;/em&gt;  manipulate the files (edit, delete, etc.) within the &lt;em&gt;Dropzone&lt;/em&gt;. This happens before being deployed in a predetermined order to every &lt;em&gt;Endpoint&lt;/em&gt; within the &lt;em&gt;Environment&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;DeployHub performs all deployments in an Agentless mode. No remote agents need be installed on the target &lt;em&gt;Endpoint&lt;/em&gt; to execute deployments.&lt;/p&gt;
&lt;p&gt;A &lt;em&gt;DropZone&lt;/em&gt; is created for each &lt;em&gt;Component&lt;/em&gt; during a deployment. Files from the &lt;em&gt;Component&lt;/em&gt; are placed into the &lt;em&gt;DropZone&lt;/em&gt;. After the &lt;em&gt;Component&lt;/em&gt; has been processed, the files within the &lt;em&gt;DropZone&lt;/em&gt; are deployed to the &lt;em&gt;Endpoints&lt;/em&gt; within the selected &lt;em&gt;Environment&lt;/em&gt;. The &lt;em&gt;DropZone&lt;/em&gt; is then deleted. Another &lt;em&gt;DropZone&lt;/em&gt; is created for the next &lt;em&gt;Component&lt;/em&gt;, until all &lt;em&gt;Components&lt;/em&gt; have been deployed for the &lt;em&gt;Application&lt;/em&gt;. The next &lt;em&gt;Application&lt;/em&gt; version is deployed, and the process starts all over again.&lt;/p&gt;
&lt;p&gt;DeployHub uses ftp, ftps, sftp, or Windows protocol to transfer files. When a deployment is executed, DeployHub performs the following steps:&lt;/p&gt;
&lt;p&gt;The first &lt;em&gt;Application&lt;/em&gt; is moved onto the stack. Any Pre-Action for the &lt;em&gt;Application&lt;/em&gt; will be executed at this point.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;The first &lt;em&gt;Component&lt;/em&gt; is moved onto the stack.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;A &lt;em&gt;DropZone&lt;/em&gt; is created for the &lt;em&gt;Component&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;The first &lt;em&gt;Component&lt;/em&gt; is processed. It references specific files from the &lt;em&gt;Repository&lt;/em&gt; and these are placed into the &lt;em&gt;DropZone&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;If needed, A Pre &lt;em&gt;Action&lt;/em&gt; for the &lt;em&gt;Component&lt;/em&gt; is performed within the &lt;em&gt;DropZone&lt;/em&gt; before deployment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;DropZone&lt;/em&gt; files are placed into every &lt;em&gt;Endpoint&lt;/em&gt; within the &lt;em&gt;Environment&lt;/em&gt; where the &lt;em&gt;Endpoint&lt;/em&gt; type is the same as the &lt;em&gt;Component&lt;/em&gt; type. Keep in mind that a &lt;em&gt;Component&lt;/em&gt; can have only one type and an &lt;em&gt;Endpoint&lt;/em&gt; can have many types.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;A Post-Action for the &lt;em&gt;Component&lt;/em&gt; is performed for cleanup or additional manipulation of files. It is run against every &lt;em&gt;Endpoint&lt;/em&gt; with the same &lt;em&gt;Component Type&lt;/em&gt; as the &lt;em&gt;Component&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;If there are more &lt;em&gt;Components&lt;/em&gt;, steps 2 through 7 are performed again after a new &lt;em&gt;DropZone&lt;/em&gt; is created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Pre and Post processing &lt;em&gt;Actions&lt;/em&gt; defined in the &lt;em&gt;Application&lt;/em&gt; or &lt;em&gt;Release&lt;/em&gt; are performed on each of the target &lt;em&gt;Endpoints&lt;/em&gt; in the &lt;em&gt;Environments&lt;/em&gt;. Any errors found at the delivery level are logged and may fail the deployment. All logs are reported back to DeployHub and recorded in the Logs section for each &lt;em&gt;Application&lt;/em&gt; or &lt;em&gt;Release&lt;/em&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The following diagram shows how the deployment process works:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/userguide/images/ProcessFlow.jpg&#34; alt=&#34;Deployment Process&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Userguide: Executing Deployments</title>
      <link>/userguide/concepts/3-executing-deployments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/userguide/concepts/3-executing-deployments/</guid>
      <description>
        
        
        &lt;h2 id=&#34;the-deployhub-deployment-engine-and-incremental-processing&#34;&gt;The DeployHub Deployment Engine and Incremental Processing&lt;/h2&gt;
&lt;p&gt;DeployHub uses a deployment engine to perform the push of deployments across your &lt;a href=&#34;/userguide/first-steps/2-define-environments/&#34;&gt;&lt;em&gt;Environments&lt;/em&gt;&lt;/a&gt;.  For SaaS users, your reverse proxy is your deployment engine.  For on premise installations, your deployment engine is installed as part of your DeployHub installation. The deployment engine is called when a deployment is initiated. The job of the deployment engine is to do the decision making about what &lt;a href=&#34;/userguide/publishing-components/intro-to-components/&#34;&gt;&lt;em&gt;Components&lt;/em&gt;&lt;/a&gt; need to be released, and what processing logic is required.  Deployment processing is based on the deployment configuration of the &lt;em&gt;Component&lt;/em&gt;. DeployHub deploys &lt;em&gt;Applications&lt;/em&gt; which are a collection of &lt;em&gt;Components&lt;/em&gt;, on an increment basis. If a &lt;em&gt;Component&lt;/em&gt; is already running in an &lt;em&gt;Environment&lt;/em&gt;, it is not re-released. This is how DeployHub independently deploys microservices, and handles roll forward or rollback logic.  DeployHub uses a backend version control engine to achieve incremental deployments, forward or backward.&lt;/p&gt;
&lt;h3 id=&#34;roll-forward-or-rollback&#34;&gt;Roll Forward or Rollback&lt;/h3&gt;
&lt;p&gt;Whenever a deployment has a problem, DeployHub can provide a fast and safe repair with Roll Forward and Rollback of an &lt;em&gt;Application&lt;/em&gt; using &lt;em&gt;Components&lt;/em&gt;. Roll Forward or Rollback allows DeployHub to apply &lt;em&gt;Components&lt;/em&gt; to &lt;em&gt;Endpoints&lt;/em&gt; incrementally and in order. As DeployHub interrogates its versioning engine for each &lt;em&gt;Application Version&lt;/em&gt;, the associated &lt;em&gt;Components&lt;/em&gt; are advanced to a new version, or replaced with a previous version to handle the Roll Forward or Rollback conditions.&lt;/p&gt;
&lt;h3 id=&#34;configuring-deployment-logic&#34;&gt;Configuring Deployment Logic&lt;/h3&gt;
&lt;p&gt;DeployHub uses either the default &lt;a href=&#34;/userguide/customizations/2-define-your-actions/&#34;&gt;&lt;em&gt;Action&lt;/em&gt;&lt;/a&gt; or &lt;em&gt;Custom Actions&lt;/em&gt; (i.e., Helm, Ansible, external script) to handle the deployment processing of your &lt;em&gt;Application&lt;/em&gt; and &lt;em&gt;Components&lt;/em&gt;.  For most deployments, no customization is required and is easily supported with the default &lt;em&gt;Actions&lt;/em&gt;. When a &lt;em&gt;Custom Action&lt;/em&gt; is used, it relys on an external process to manage the deployment processing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Executing Deployments with the Default &lt;em&gt;Actions&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When you execute a deployment, DeployHub will call a default &lt;em&gt;Action&lt;/em&gt; to push the &lt;em&gt;Component&lt;/em&gt; from the source location to the target &lt;em&gt;Endpoint&lt;/em&gt;. You can customize the deployment process by writing your own &lt;em&gt;Actions&lt;/em&gt; that allow you to refine the way the deployment processing will occur. &lt;em&gt;Actions&lt;/em&gt; themselves contain &lt;a href=&#34;/userguide/customizations/2-define-your-functions-and-procedures/&#34;&gt;&lt;em&gt;Procedures&lt;/em&gt;, &lt;em&gt;Functions,&lt;/em&gt;&lt;/a&gt; and other &lt;em&gt;Actions&lt;/em&gt; which allow you to develop highly functioning and re-useable processes that can be shared across the &lt;em&gt;Domain&lt;/em&gt; to which they belong. For most users, no modifications to the default &lt;em&gt;Actions&lt;/em&gt; are required. For your microservice &lt;em&gt;Components&lt;/em&gt; you will use a &lt;em&gt;Custom Action&lt;/em&gt; that calls your Helm chart.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Executing Deployments with &lt;em&gt;Custom Actions&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Custom Actions&lt;/em&gt; allow you to execute existing one-off deployment scripts and can support an easy transition to using DeployHub. You can choose to bypass DeployHub&amp;rsquo;s default &lt;em&gt;Actions&lt;/em&gt; using a pre-defined our newly created &lt;a href=&#34;/userguide/customizations/2-define-your-actions/&#34;&gt;&lt;em&gt;Custom Action&lt;/em&gt;&lt;/a&gt;. This can be used to call other tools such as Helm, Ansible or a homegrown deploy script that does the heavy lifting of managing deployment logic. To use a &lt;em&gt;Custom Action&lt;/em&gt; you will &lt;a href=&#34;/userguide/publishing-components/2-define-components/#viewing-and-editing-_components_-with-the-dashboard&#34;&gt;define your &lt;em&gt;Component&lt;/em&gt;&lt;/a&gt; with the &lt;em&gt;Custom Action&lt;/em&gt; that will take over the normal deployment processing. When a &lt;em&gt;Custom Action&lt;/em&gt; is designated within an &lt;em&gt;Application&lt;/em&gt; or &lt;em&gt;Component&lt;/em&gt;, any default Pre or Post &lt;em&gt;Action&lt;/em&gt; is ignored and not executed during the deployment. If a &lt;em&gt;Custom Action&lt;/em&gt; is used, it can use one or more DeployHub &lt;em&gt;Procedures&lt;/em&gt;, &lt;em&gt;Functions&lt;/em&gt;, and &lt;em&gt;Actions&lt;/em&gt;, in a predetermined order.&lt;/p&gt;
&lt;h3 id=&#34;distributed-deployments-for-traditional-data-centers&#34;&gt;Distributed Deployments for Traditional Data Centers&lt;/h3&gt;
&lt;p&gt;For large distributed traditional data centers you can install multiple deployment engines and assign them to specific Project &lt;em&gt;Domains&lt;/em&gt; to handle large &amp;lsquo;fan out&amp;rsquo; deployment processing. Multiple deployment engines can be used to distribute the deployment processing for large data centers with thousands of physical &lt;em&gt;Endpoints&lt;/em&gt;, but is not required for a modern Kubernetes architecture. You can change the deployment engine at the &lt;a href=&#34;/userguide/first-steps/2-defining-domains/#_domain_-details&#34;&gt;&lt;em&gt;Domain&lt;/em&gt; Details section&lt;/a&gt; using the &lt;em&gt;Engine Hostname&lt;/em&gt; Detail field. This field tells DeployHub which engine to use for deployments in that &lt;em&gt;Domain&lt;/em&gt;. If you need to implement multiple deployment engines for large distributed deployments, contact our &lt;a href=&#34;/userguide/installation-and-support/0-contactsupport/&#34;&gt;Support Team&lt;/a&gt;. They can provide you a link to download an installer that includes only the deployment engine and not the full DeployHub install. You would use this installer to build out separate deployment engines that are then defined to the &lt;em&gt;Domain&lt;/em&gt; allowing each &lt;em&gt;Application&lt;/em&gt; to have its own engine.&lt;/p&gt;
&lt;h2 id=&#34;executing-deployments&#34;&gt;Executing Deployments&lt;/h2&gt;
&lt;p&gt;Deployments can be executed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On Demand&lt;/li&gt;
&lt;li&gt;With Roll Forward or Rollback&lt;/li&gt;
&lt;li&gt;Scheduled via the Calendar&lt;/li&gt;
&lt;li&gt;Automated from Continuous Delivery&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;executing-deployments-on-demand&#34;&gt;Executing Deployments On-demand&lt;/h3&gt;
&lt;p&gt;An on-demand deployment can be initiated for an &lt;em&gt;Application&lt;/em&gt; or &lt;em&gt;Release&lt;/em&gt; using a &lt;em&gt;Deploy Task&lt;/em&gt;. Once the &lt;em&gt;Deploy Task&lt;/em&gt; has been defined in the &lt;em&gt;Domain&lt;/em&gt;, it will be available from the &lt;a href=&#34;/userguide/packaging-applications/2-defining-applications/#the-_application_-list-view-for-adding-or-deleting&#34;&gt;&lt;em&gt;Application&lt;/em&gt; List View&lt;/a&gt;.  By selecting the &lt;em&gt;Application Version&lt;/em&gt; and going to the Task drop down, you can push a deployment on-demand.&lt;/p&gt;
&lt;h3 id=&#34;roll-forward-incremental-deployments&#34;&gt;Roll Forward Incremental Deployments&lt;/h3&gt;
&lt;p&gt;You execute a roll forward or rollback deployment on-demand. To roll forward or rollback, go to the  &lt;a href=&#34;/userguide/packaging-applications/2-defining-applications/#the-_application_-list-view-for-adding-or-deleting&#34;&gt;&lt;em&gt;Application&lt;/em&gt; List View&lt;/a&gt;, select the new or older &lt;em&gt;Application Version&lt;/em&gt; you wish to deploy and use the &lt;em&gt;Deploy Task&lt;/em&gt; available from the Task Tab. This will push the selected version to the cluster incrementally.&lt;/p&gt;
&lt;h2 id=&#34;deployhub-and-your-continuous-delivery-cd-pipeline&#34;&gt;DeployHub and Your Continuous Delivery (CD) Pipeline&lt;/h2&gt;
&lt;p&gt;DeployHub is added to your CD pipeline to perform continuous configuration management of your &lt;em&gt;Applications&lt;/em&gt; and &lt;em&gt;Components&lt;/em&gt;, and to push them to runtime &lt;em&gt;Environments&lt;/em&gt; across your defined Life Cycle.&lt;/p&gt;
&lt;p&gt;DeployHub uses a built-in deployment pipeline for tracking an &lt;em&gt;Application&amp;rsquo;s&lt;/em&gt; journey across a software delivery Life Cycle, i.e. Dev, Test, Production. However, it is important to understand that a DeployHub Life Cycle &lt;em&gt;Subdomain&lt;/em&gt; is not intended to replace your CD orchestration solution. DeployHub integrates with your CD pipeline becoming a part of your overall ecosystem for versioning, tracking and deploying software to clusters, cloud environments and physical data centers.&lt;/p&gt;
&lt;p&gt;DeployHub tracks an &lt;em&gt;Application&amp;rsquo;s&lt;/em&gt; configuration including where it is in the Life Cycle in terms of &lt;em&gt;Environments&lt;/em&gt;.  An &lt;em&gt;Environment&lt;/em&gt; is assigned to a Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;. Therefore, DeployHub can track where a &lt;em&gt;Component&lt;/em&gt; or &lt;em&gt;Application&lt;/em&gt; is in the Life Cycle based on where it has been installed. Each Life Cycle &lt;em&gt;Subdomain&lt;/em&gt; can contain multiple &lt;em&gt;Environments&lt;/em&gt;. Regardless of what &lt;em&gt;Environment&lt;/em&gt; an &lt;em&gt;Application&lt;/em&gt; is running in, DeployHub can still track where it is in the Life Cycle process based on the Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;. This is the core function of Life Cycle &lt;em&gt;Subdomains&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A Life Cycle &lt;em&gt;Subdomain&lt;/em&gt; is the lowest level &lt;em&gt;Domain&lt;/em&gt;.  You can not create a &lt;em&gt;Subdomain&lt;/em&gt; off of a Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;using-a-life-cycle-subdomain&#34;&gt;Using a Life Cycle Subdomain&lt;/h3&gt;
&lt;p&gt;When you create a Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;, you provide a means to include Life Cycle state information as part of your &lt;em&gt;Application&amp;rsquo;s&lt;/em&gt; configuration. For each state of your software delivery Life Cycle, you create an associated Life Cycle &lt;em&gt;Subdomain&lt;/em&gt; for your &lt;em&gt;Application&lt;/em&gt;. You do this by using the &lt;em&gt;Domain&lt;/em&gt; Dashboard. Navigate to your &lt;em&gt;Application&amp;rsquo;s&lt;/em&gt; &lt;em&gt;Domain&lt;/em&gt;, select the  &amp;ldquo;All &lt;em&gt;Subdomains&lt;/em&gt; are Life Cycles&amp;rdquo; checkbox, and then add your child &lt;em&gt;Subdomains&lt;/em&gt;.  All &lt;em&gt;Subdomains&lt;/em&gt; will represent your Life Cycle process. You will need to navigate to the &lt;em&gt;Environment&lt;/em&gt; Dashboard to add the &lt;em&gt;Environments&lt;/em&gt; to your Life Cycle &lt;em&gt;Subdomains&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;establishing-the-progression-order-of-your-life-cycle&#34;&gt;Establishing the Progression Order of Your Life Cycle&lt;/h3&gt;
&lt;p&gt;You can force the progression of your Life Cycle process by adding a &amp;ldquo;Move&amp;rdquo; Task to the Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;.  At the &amp;ldquo;Move&amp;rdquo; Task level, you define what Life Cycle &lt;em&gt;Subdomain&lt;/em&gt; will be the next state (the &amp;ldquo;move to &lt;em&gt;Domain&lt;/em&gt;). This is how DeployHub clearly defines the order of how an &lt;em&gt;Application&lt;/em&gt; should progress through the Life Cycle, i.e. first development, then test, and finally production. A &amp;ldquo;Move&amp;rdquo; Task does not perform a deployment, it just stages the &lt;em&gt;Application&lt;/em&gt; for a deployment into the &lt;em&gt;Environments&lt;/em&gt; associated with that Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To deploy an &lt;em&gt;Application&lt;/em&gt; into an &lt;em&gt;Environment&lt;/em&gt; make sure that the Deploy Task is assigned to the &lt;em&gt;Domain&lt;/em&gt;.  The Deploy Task is the default Task for all newly created &lt;em&gt;Domains&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;your-life-cycle-_subdomains_-and-your-continuous-delivery-engine&#34;&gt;Your Life Cycle &lt;em&gt;Subdomains&lt;/em&gt; and your Continuous Delivery Engine&lt;/h3&gt;
&lt;p&gt;Your continuous delivery (CD) engine will define your Life Cycle progression.  When you integrate DeployHub into your existing CD Pipeline, you will need to define your Life Cycle &lt;em&gt;Subdomains&lt;/em&gt; to mimic your CD Workflow progression. You can then associate integration of each of your CD Workflows directly to a DeployHub Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;. You can perform calls to DeployHub to both &amp;ldquo;Move&amp;rdquo; and &amp;ldquo;Deploy&amp;rdquo; &lt;em&gt;Applications&lt;/em&gt; into &lt;em&gt;Environments&lt;/em&gt;.  If you are a DeployHub Pro users, you can also call &amp;ldquo;Request&amp;rdquo; and &amp;ldquo;Approve&amp;rdquo; Tasks as part of your integration. These Tasks interact with DeployHub Pro &amp;ldquo;Smart&amp;rdquo; calendars, not available in DeployHub Team. See &lt;a href=&#34;/userguide/integrations/CI-CD_Integrations.md&#34;&gt;Using DeployHub with CI/CD&lt;/a&gt; for more information on connecting your CI/CD solution to DeployHub.&lt;/p&gt;
&lt;h2 id=&#34;deployment-tasks&#34;&gt;Deployment Tasks&lt;/h2&gt;
&lt;p&gt;Task are used for executing deployments, managing approvals, or staging a deployment. Tasks can be assigned to any &lt;em&gt;Domain&lt;/em&gt;. However, they are most commonly associated to &lt;em&gt;Project Domains&lt;/em&gt; and &lt;em&gt;Life Cycle Domains&lt;/em&gt;. You can assign a Task at a higher &lt;em&gt;Domain&lt;/em&gt; level allowing any child &lt;em&gt;Domains&lt;/em&gt; to automatically inherit the Tasks. This inheritance simplifies managing Tasks by making some common to all of your &lt;em&gt;Subdomains&lt;/em&gt;. However, this means that a Catalog &lt;em&gt;Domain&lt;/em&gt; may include Tasks that it cannot use.&lt;/p&gt;
&lt;p&gt;The following Tasks are available as default Tasks, but you can create any type of custom Task. A custom Task will call a Custom &lt;a href=&#34;/userguide/customizations/2-define-your-actions/&#34;&gt;&lt;em&gt;Action&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Move Version to the Next or Previous Pipeline State&lt;/li&gt;
&lt;li&gt;Deploy Version to &lt;em&gt;Environment&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Manually Trigger &lt;em&gt;Action&lt;/em&gt; to be executed&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;deployhub-pro&#34;&gt;DeployHub Pro&lt;/h3&gt;
&lt;p&gt;DeployHub Pro includes a &lt;a href=&#34;/userguide/profeatures/calendar/&#34;&gt;&amp;ldquo;smart&amp;rdquo; Calendar&lt;/a&gt;.  The following Task are used to interact with the DeployHub Smart Calendar for Requesting and Approving deployments.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Request Calendar Entry for Deployment to an &lt;em&gt;Environment&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Approve Version for Move to Next Pipeline State&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;adding-editing-and-deleting-tasks&#34;&gt;Adding, Editing and Deleting Tasks&lt;/h3&gt;
&lt;p&gt;You can add new Tasks from the &lt;em&gt;Domain&lt;/em&gt; Dashboard by navigating to the &lt;em&gt;Domain&lt;/em&gt; and interacting with the Tasks Section.  Select the +Add option from the Tasks Section and a pop-up displays all available Tasks. Selecting a Task will add a new row into the table.  Use the Task Detail Section to define the unique details of your new Task. You can update or remove a Task by using the Task Section table.  Using the checkbox, select the item and use the the Delete or Edit options.&lt;/p&gt;
&lt;p&gt;Once you create a Task, it is recommended that you rename that Task to more closely describe its use depending on the options selected.&lt;/p&gt;
&lt;p&gt;Below is a description of all Tasks and their detailed information.&lt;/p&gt;
&lt;h3 id=&#34;move-version-to-the-next-or-previous-pipeline-state&#34;&gt;Move Version to the Next or Previous Pipeline State&lt;/h3&gt;
&lt;p&gt;Moves an &lt;em&gt;Application&lt;/em&gt; or &lt;em&gt;Release&lt;/em&gt; version from one Pipeline state (Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;) to another. This can be used as a promotion or a demotion of an &lt;em&gt;Application&lt;/em&gt; or &lt;em&gt;Release&lt;/em&gt; version between Life Cycle states. When the Task is defined, the Life Cycle &lt;em&gt;Subdomain&lt;/em&gt; has to be specified as part of the Task definition. The Approval Task must be accepted before the Move Version is to succeed.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;ldquo;Move&amp;rdquo; Task Detail Fields&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The unique name of the Task.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Created&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Auto-generated date and time the Task was added.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Modified&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Auto-generated date and time the Task was updated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Pre-Action&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Change the default behavior by assigning a custom &lt;em&gt;Action&lt;/em&gt; to execute as a Pre-processing step.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Post-Action&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Change the default behavior by assigning a custom &lt;em&gt;Action&lt;/em&gt; to execute as a Post-processing step.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Available in &lt;em&gt;Subdomains&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Once selected, all &lt;em&gt;Subdomains&lt;/em&gt; will have access to this Task.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Move To &lt;em&gt;Domain&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The target &lt;em&gt;Domain&lt;/em&gt; where the version will be moved.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Success &lt;em&gt;Notify Template&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Notify Template&lt;/em&gt; emailed on a successful move. You need to define the &lt;em&gt;Notify Template&lt;/em&gt; from the Setup Menu.  See more on &lt;a href=&#34;/userguide/customizations/2-notifier-templates/&#34;&gt;&lt;em&gt;Notify Templates&lt;/em&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Failure &lt;em&gt;Notify Template&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Notify Template&lt;/em&gt; emailed on a failed move. You need to define the &lt;em&gt;Notify Template&lt;/em&gt; from the Setup Menu.  See more on &lt;a href=&#34;/userguide/customizations/2-notifier-templates/&#34;&gt;&lt;em&gt;Notify Templates&lt;/em&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;deploy-version-to-_environment_&#34;&gt;Deploy Version to &lt;em&gt;Environment&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Deploys an &lt;em&gt;Application&lt;/em&gt; or &lt;em&gt;Release&lt;/em&gt; version to an &lt;em&gt;Environment&lt;/em&gt;. Select the target &lt;em&gt;Environment&lt;/em&gt; via a drop-down list.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;ldquo;Deploy&amp;rdquo; Task Detail Fields&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The unique name of the Task.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Created&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Auto-generated date and time when added.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Modified&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Auto-generated date and time when updated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Pre-Action&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Change the default behavior by assigning a custom &lt;em&gt;Action&lt;/em&gt; to execute as a Pre-processing step.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Post-Action&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Change the default behavior by assigning a custom &lt;em&gt;Action&lt;/em&gt; to execute as a Post-processing step.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Available in &lt;em&gt;Subdomains&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;If selected, all &lt;em&gt;Subdomains&lt;/em&gt; will have access to this Task.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;manually-trigger-_action_-to-be-executed&#34;&gt;Manually Trigger &lt;em&gt;Action&lt;/em&gt; to be executed&lt;/h3&gt;
&lt;p&gt;Runs a stand-alone &lt;em&gt;Action&lt;/em&gt;. For example, if you need to interrupt a deployment process, this Task allows you to execute the steps manually. The manually triggered &lt;em&gt;Action&lt;/em&gt; will be placed in the &amp;ldquo;To do&amp;rdquo; list of the &lt;em&gt;User&lt;/em&gt; or &lt;em&gt;Group&lt;/em&gt; that executed the Deploy Task.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;ldquo;Manually Trigger&amp;rdquo; Task Detail Fields&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The name of the Task - can be changed to make the Task unique.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Created&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The auto generated date and time the Task was added.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Modified&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The auto generated date and time the Task was updated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Pre-Action&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;You can change the default behavior by assigning a custom &lt;em&gt;Action&lt;/em&gt; to execute as a Pre-processing step.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Post-Action&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;You can change the default behavior by assigning a custom &lt;em&gt;Action&lt;/em&gt; to execute as a Post-processing step.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Action to Run&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The Action that will be executed manually.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Available in &lt;em&gt;Subdomains&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;If selected, all &lt;em&gt;Subdomains&lt;/em&gt; will have access to this Task.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Success &lt;em&gt;Notify Template&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Notify Template&lt;/em&gt; that will be emailed on a successful &lt;em&gt;Action&lt;/em&gt;. You will need to define the &lt;em&gt;Notify Template&lt;/em&gt; from the Setup Menu.  See more on &lt;a href=&#34;/userguide/customizations/2-notifier-templates/&#34;&gt;&lt;em&gt;Notify Templates&lt;/em&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Failure &lt;em&gt;Notify Template&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Notify Template&lt;/em&gt; that will be emailed on a failed &lt;em&gt;Action&lt;/em&gt;. You will need to define the &lt;em&gt;Notify Template&lt;/em&gt; from the Setup Menu.  See more on &lt;a href=&#34;/userguide/customizations/2-notifier-templates/&#34;&gt;&lt;em&gt;Notify Templates&lt;/em&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;approve-version-for-move-to-next-pipeline-state&#34;&gt;Approve Version for Move to Next Pipeline State&lt;/h3&gt;
&lt;p&gt;Approves the &lt;em&gt;Application&lt;/em&gt; or &lt;em&gt;Release&lt;/em&gt; version so that it can be moved to a specified state in the pipeline (Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;). This works in conjunction with the Move Version Task. When the Approve Task is defined, the Target &lt;em&gt;Domain&lt;/em&gt; has to be specified. When the Approve Task is executed, the selected &lt;em&gt;Application&lt;/em&gt; or &lt;em&gt;Release&lt;/em&gt; version can either be Approved or Rejected. Only when the an &lt;em&gt;Application&lt;/em&gt; or &lt;em&gt;Release&lt;/em&gt; version is &amp;ldquo;approved&amp;rdquo; can it be &amp;ldquo;Moved&amp;rdquo; or &amp;ldquo;Deployed&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Note: When an Approve Task has been defined for a &lt;em&gt;Domain&lt;/em&gt;, it will force the use of the Approve Task before a &amp;ldquo;Move&amp;rdquo; or &amp;ldquo;Deploy&amp;rdquo; Task can be executed. If a &amp;ldquo;Move&amp;rdquo; or &amp;ldquo;Deploy&amp;rdquo; Task is attempted but has not been &amp;ldquo;Approved,&amp;rdquo; an error will be displayed indicating that the Task must be Approved.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;ldquo;Approve&amp;rdquo; Task Detail Fields&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The name of the Task - this information can be changed to make the Task unique.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Created&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The auto generated date and time the Task was added.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Modified&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The auto generated date and time the Task was updated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Pre-Action&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;You can change the default behavior of this Task by assigning a custom &lt;em&gt;Action&lt;/em&gt; to execute as a Pre-processing step.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Post-Action&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;You can change the default behavior of this Task by assigning a custom &lt;em&gt;Action&lt;/em&gt; to execute as a Post-processing step.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Available in &lt;em&gt;Subdomains&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;If this is selected, all &lt;em&gt;Subdomains&lt;/em&gt; will have access to this Task.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Approval &lt;em&gt;Domains&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The target &lt;em&gt;Domain&lt;/em&gt; that approval  is the subject of.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Approval &lt;em&gt;Notify Template&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Notify Template&lt;/em&gt; that will be emailed on approval. You will need to define the &lt;em&gt;Notify Template&lt;/em&gt; from the Setup Menu.  See more on &lt;a href=&#34;/userguide/customizations/2-notifier-templates/&#34;&gt;&lt;em&gt;Notify Templates&lt;/em&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Rejected &lt;em&gt;Notify Template&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Notify Template&lt;/em&gt; that will be emailed on rejection. You will need to define the &lt;em&gt;Notify Template&lt;/em&gt; from the Setup Menu.  See more on &lt;a href=&#34;/userguide/customizations/2-notifier-templates/&#34;&gt;&lt;em&gt;Notify Templates&lt;/em&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;request-calendar-entry-for-deployment-to-an-_environment_&#34;&gt;Request Calendar Entry for Deployment to an &lt;em&gt;Environment&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;DeployHub Pro feature. Sends a request from a &lt;em&gt;User&lt;/em&gt; to add a time slot to the calendar for a deployment. The request is sent to &lt;em&gt;Group&lt;/em&gt; who has the authority to manage a particular &lt;em&gt;Environment&amp;rsquo;s&lt;/em&gt; Calendar. When the Request Task is defined it is linked to the task to be requested. When the Request Task is executed an entry is placed into the &amp;ldquo;To Do&amp;rdquo; list of all the &lt;em&gt;Users&lt;/em&gt; who are members of the &lt;em&gt;Group&lt;/em&gt; with the calendar access. The Request Task can have a Request Notification Template defined which can send out a notification to the appropriate &lt;em&gt;Groups&lt;/em&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;ldquo;Request&amp;rdquo; Task Detail Fields&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The name of the Task - can be changed to make the Task unique.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Created&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The auto generated date and time the Task was added.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Modified&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The auto generated date and time the Task was updated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Pre-Action&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;You can change the default behavior by assigning a custom &lt;em&gt;Action&lt;/em&gt; to execute a Pre-processing step.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Post-Action&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;You can change the default behavior by assigning a custom &lt;em&gt;Action&lt;/em&gt; to execute a Post-processing step.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Available in &lt;em&gt;Subdomains&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;If selected, all &lt;em&gt;Subdomains&lt;/em&gt; will have access to this Task.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linked Task&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The target &lt;em&gt;Domain&lt;/em&gt; where the version will be moved.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Request &lt;em&gt;Notify Template&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The &lt;em&gt;Notify Template&lt;/em&gt; emailed for the request. You will need to define the &lt;em&gt;Notify Template&lt;/em&gt; from the Setup Menu.  See more on &lt;a href=&#34;/userguide/customizations/2-notifier-templates/&#34;&gt;&lt;em&gt;Notify Templates&lt;/em&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;task-execute-access&#34;&gt;Task Execute Access&lt;/h3&gt;
&lt;p&gt;Once a &lt;em&gt;Task&lt;/em&gt; is defined, it must be granted execute access to a &lt;em&gt;Group&lt;/em&gt; before it can be invoked. Select the &lt;em&gt;Task&lt;/em&gt; using the check box. Drag the desired  &lt;em&gt;Group&lt;/em&gt; from the &lt;em&gt;Available Groups&lt;/em&gt; column to the &lt;em&gt;Group Access&lt;/em&gt; area. &lt;em&gt;Users&lt;/em&gt; of the &lt;em&gt;Group&lt;/em&gt; can then execute the specified task.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Groups&lt;/em&gt; are assigned authority on a &lt;em&gt;Task&lt;/em&gt; by &lt;em&gt;Task&lt;/em&gt; basis. It is possible for a &lt;em&gt;Domain&lt;/em&gt; to have two different &lt;em&gt;Tasks&lt;/em&gt; with the same function, one of which allows a particular &lt;em&gt;Group&lt;/em&gt; to run the &lt;em&gt;Task&lt;/em&gt;, and the other which doesn&amp;rsquo;t. This allows similar &lt;em&gt;Tasks&lt;/em&gt; to be created. They can have different characteristics assigned to them such as Pre-Actions and/or Post-Actions, Notification Templates, etc. Also different &lt;em&gt;User Groups&lt;/em&gt; can have the authority to run them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Example: A &lt;em&gt;Group&lt;/em&gt; can run a &amp;ldquo;Move&amp;rdquo; Task, sending an &lt;em&gt;Application Version&lt;/em&gt; from the Test Life Cycle State to the Production Life Cycle State. A Group consisting of testers perhaps does not have the ability to run that same Task.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Example: A Move Task is linked to a Request Task. A User in the Test Group would run the Request Task, which notifies Users in the Release Group and requests that the Application Version be moved. Users in the Production Group would then receive the Request Task through their To Do List and optionally an email (which was designated as the Request Notification Template in the Request Task). They would then run the linked Move Task to move the Application Version to the Production Life Cycle State.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NOTE: Another way to accomplish this is to link an Approval Task to the Request Task. The User in the User Group would send the Request Task, and a User in the Admin Group would be notified. They would then run the Approve Task to allow the User in the Test Group to run the Move Task.&lt;/p&gt;
&lt;h3 id=&#34;additional-task-parameters&#34;&gt;Additional Task Parameters&lt;/h3&gt;
&lt;p&gt;Additional parameters can be added to a Task. These additional parameters will set Global Variable at execution time. To add them, select the Task from the Task Section. Use +Add to create a new entry into the Parameters table for the selected task. It will have two columns:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Label: This will appear on the Task&amp;rsquo;s execution window whenever the Task is executed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Variable: An Entry, Password, or Dropdown field appears to the right of the Label whenever a Task is executed, where values can be either entered or selected, depending on the Type.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use the Save to commit the change to the table. Use Edit to update a Task Parameter, or Delete to remove a Task Parameter.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Userguide: DeployHub and Continuous Delivery</title>
      <link>/userguide/concepts/lifecyclesubdomains/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/userguide/concepts/lifecyclesubdomains/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction-to-life-cycle-_subdomains_&#34;&gt;Introduction to Life Cycle &lt;em&gt;Subdomains&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;DeployHub uses a built-in deployment pipeline for tracking an &lt;em&gt;Application&amp;rsquo;s&lt;/em&gt; journey across a software delivery Life Cycle, i.e. Dev, Test, Production. However, it is important to understand that a DeployHub Life Cycle &lt;em&gt;Subdomain&lt;/em&gt; is not intended to replace your continuous delivery (CD) orchestration solution. In fact, there is integration that allows DeployHub to be called by your CD pipeline so it becomes part of your overall ecosystem for performing continuous configuration management and continuous deployment.&lt;/p&gt;
&lt;p&gt;DeployHub tracks an &lt;em&gt;Application&amp;rsquo;s&lt;/em&gt; configuration including where it is in the Life Cycle in terms of &lt;em&gt;Environments&lt;/em&gt;.  An &lt;em&gt;Environment&lt;/em&gt; is assigned to a Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;. Therefore, we can track where a &lt;em&gt;Component&lt;/em&gt; or &lt;em&gt;Application&lt;/em&gt; is in the Life Cycle based on where it has been installed. Each Life Cycle &lt;em&gt;Subdomain&lt;/em&gt; can contain multiple &lt;em&gt;Environments&lt;/em&gt;. Regardless of what &lt;em&gt;Environment&lt;/em&gt; an &lt;em&gt;Application&lt;/em&gt; is running in, DeployHub can still track where it is in the Life Cycle process based on the Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;. This is the core function of Life Cycle &lt;em&gt;Subdomains&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A Life Cycle &lt;em&gt;Subdomain&lt;/em&gt; is the lowest level &lt;em&gt;Domain&lt;/em&gt;.  You can not create a &lt;em&gt;Subdomain&lt;/em&gt; off of a Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;using-a-life-cycle-subdomain&#34;&gt;Using a Life Cycle Subdomain&lt;/h2&gt;
&lt;p&gt;When you create a Life Cycle Subdomain, you provide a means to include Life Cycle state information as part of your &lt;em&gt;Application&amp;rsquo;s&lt;/em&gt; configuration. For each state of your software delivery Life Cycle, you create an associated Life Cycle &lt;em&gt;Subdomain&lt;/em&gt; for your &lt;em&gt;Application&lt;/em&gt;. You do this by using the &lt;em&gt;Domain&lt;/em&gt; Dashboard. Navigate to your &lt;em&gt;Application&amp;rsquo;s&lt;/em&gt; &lt;em&gt;Domain&lt;/em&gt;, select the  &amp;ldquo;All &lt;em&gt;Subdomains&lt;/em&gt; are Life Cycles&amp;rdquo; checkbox, and then add your child &lt;em&gt;Subdomains&lt;/em&gt;.  All &lt;em&gt;Subdomains&lt;/em&gt; will represent your Life Cycle process. You will need to navigate to the &lt;em&gt;Environment&lt;/em&gt; Dashboard to add the &lt;em&gt;Environments&lt;/em&gt; to your Life Cycle &lt;em&gt;Subdomains&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;establishing-the-progression-order-of-your-life-cycle&#34;&gt;Establishing the Progression Order of Your Life Cycle&lt;/h3&gt;
&lt;p&gt;You can force the progression of your Life Cycle process by adding a &amp;ldquo;Move&amp;rdquo; Task to the Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;.  At the &amp;ldquo;Move&amp;rdquo; Task level, you define what Life Cycle &lt;em&gt;Subdomain&lt;/em&gt; will be the next state (the &amp;ldquo;move to &lt;em&gt;Domain&lt;/em&gt;). This is how DeployHub clearly defines the order of how an &lt;em&gt;Application&lt;/em&gt; should progress through the Life Cycle, i.e. first development, then test, and finally production. A &amp;ldquo;Move&amp;rdquo; Task does not perform a deployment, it just stages the &lt;em&gt;Application&lt;/em&gt; for a deployment into the &lt;em&gt;Environments&lt;/em&gt; associated with that Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To deploy an &lt;em&gt;Application&lt;/em&gt; into an &lt;em&gt;Environment&lt;/em&gt; make sure that the Deploy Task is assigned to the &lt;em&gt;Domain&lt;/em&gt;.  The Deploy Task is the default Task for all newly created &lt;em&gt;Domains&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;your-life-cycle-_subdomains_-and-your-continuous-delivery-engine&#34;&gt;Your Life Cycle &lt;em&gt;Subdomains&lt;/em&gt; and your Continuous Delivery Engine&lt;/h3&gt;
&lt;p&gt;Your continuous delivery (CD) engine will define your Life Cycle progression.  When you integrate DeployHub into your existing CD Pipeline, you will need to define your Life Cycle &lt;em&gt;Subdomains&lt;/em&gt; to mimic your CD Workflow progression. You can then associate integration of each of your CD Workflows directly to a DeployHub Life Cycle &lt;em&gt;Subdomain&lt;/em&gt;. You can perform calls to DeployHub to both &amp;ldquo;Move&amp;rdquo; and &amp;ldquo;Deploy&amp;rdquo; &lt;em&gt;Applications&lt;/em&gt; into &lt;em&gt;Environments&lt;/em&gt;.  If you are a DeployHub Pro users, you can also call &amp;ldquo;Request&amp;rdquo; and &amp;ldquo;Approve&amp;rdquo; Tasks as part of your integration. These Tasks interact with DeployHub Pro &amp;ldquo;Smart&amp;rdquo; calendars, not available in DeployHub Team.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
